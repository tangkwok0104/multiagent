# Load API key first

from dotenv import load_dotenv
import os
load_dotenv()
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")


# Debug: Print the API key (ensure this is safe to do in your environment)
print(f"Using API Key: {OPENAI_API_KEY}")

# Then initialize Swarm
from swarm import Swarm, Agent
import swarm
print(swarm.__file__)

   # Use the API key
if OPENAI_API_KEY:
       print("API Key loaded successfully.")
       # Initialize your client or make API calls here
       # client = Swarm(api_key=OPENAI_API_KEY)
else:
       print("API Key not found. Please check ")

client = Swarm(api_key=OPENAI_API_KEY)

# Define Agents
brainstorming_agent = Agent(
    name="Brainstorming Agent",
    instructions="""
    Generate a wide range of creative and innovative ideas. Think beyond conventional solutions and explore various angles.
    Each idea should be detailed, providing a clear concept, potential features, and use cases. Include at least 3 examples or applications
    for each idea to illustrate how it can be executed in real-world scenarios. Avoid generic suggestionsâ€”focus on specific, actionable concepts.
    """
)

research_agent = Agent(
    name="Research Agent",
    instructions="""
    Conduct thorough research to provide data, facts, and evidence that support the ideas generated by the Brainstorming Agent.
    Focus on gathering quantitative data, industry trends, case studies, and real-world examples. Each output should include detailed references
    or sources where applicable, as well as actionable insights that validate the feasibility of the idea. Summarize your findings in a clear and concise format.
    """
)

structuring_agent = Agent(
    name="Content Structuring Agent",
    instructions="""
    Organize content into a well-structured, logical format. Focus on creating a clear flow with sections, sub-sections, and bullet points where needed.
    Ensure that the content is easy to navigate and understand, with a strong introduction, body, and conclusion. Include headers, numbered lists, and
    formatting to enhance readability. Provide a content outline first, followed by the fully structured content.
    """
)

logic_agent = Agent(
    name="Logic Agent",
    instructions="""
    Review content for logical consistency and coherence. Ensure that all arguments are sound, and identify any gaps or contradictions.
    Provide constructive feedback on how to improve clarity and flow. Additionally, check for alignment with the project's objectives and refine
    any unclear statements. Each output should include a brief summary of the logical structure, followed by detailed comments on specific areas.
    """
)

marketing_agent = Agent(
    name="Marketing Agent",
    instructions="""
    Craft compelling and persuasive content tailored to the target audience. Focus on highlighting the benefits, emotional appeal, and unique
    selling points of the idea or product. Include specific marketing strategies, such as key messaging, calls-to-action, and channels to reach the audience.
    Provide at least 3 creative campaign ideas, complete with headlines, taglines, and promotional strategies. Ensure the content aligns with the brand tone and voice.
    """
)

# Define Collaboration Functions
def pass_to_research():
    return research_agent

def pass_to_structuring():
    return structuring_agent

def pass_to_logic():
    return logic_agent

def pass_to_marketing():
    return marketing_agent

# Assign Functions to Agents
brainstorming_agent.functions = [pass_to_research]
research_agent.functions = [pass_to_structuring]
structuring_agent.functions = [pass_to_logic]
logic_agent.functions = [pass_to_marketing]

# Run the Workflow
response = client.run(
    agent=brainstorming_agent,
    messages=[{"role": "user", "content": "I need new product ideas for AI-based productivity tools"}],
)

print(f"Final Output: {response[-1]['content']}")
